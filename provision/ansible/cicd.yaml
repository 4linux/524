---
- hosts: all
  become: yes
  become_user: root
  become_method: sudo
  tasks:
    - name: Garantindo /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
      with_items:
        - 192.168.88.10 cicd.4labs.example cicd
        - 192.168.88.20	cicd-tools.4labs.example cicd-tools 
        - 192.168.88.30 k3s.4labs.example k3s
        - 192.168.88.40 gitlab-ci.4labs.example gitlab-ci

    - name: Adiciona usuario suporte
      user:
        name: suporte
        shell: /bin/bash
        password : $1$QbUARykG$p2nthVG8AkDvabKPHwboa1

    - name: Adiciona usuario jenkins
      user:
        name: jenkins
        shell: /bin/bash

    - name: Instala pacotes que permitem que o apt seja usado sobre HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - snapd
        - git
        - vim
        - python3-docker

    - name: Adiciona uma chave de assinatura apt para o Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adiciona repositorio apt para versao estavel
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Instala o Docker e suas dependencias
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose
     
    - name: Criando o arquivo daemon.json
      copy:
        src: files/daemon.json
        dest: /etc/docker/
        owner: root
        group: root
        mode: '0644'

    - name: Reinicia o Docker
      service:
        name: docker
        daemon_reload: yes
        state: restarted

    - name: Criar diretório para chave GPG
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Baixar chave GPG do repositório do Kubernetes
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        dest: /tmp/release.key
        mode: '0644'

    - name: Converter chave GPG para formato adequado e mover para keyrings
      ansible.builtin.command: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/release.key
      args:
        removes: /tmp/release.key

    - name: Adicionar repositório do Kubernetes
      ansible.builtin.command: |
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /" | \
        tee /etc/apt/sources.list.d/kubernetes.list
      args:
        creates: /etc/apt/sources.list.d/kubernetes.list

    - name: Atualizar cache do apt
      apt:
        update_cache: yes


    - name: /var/lib/jenkins/.kube
      file:
        path: /var/lib/jenkins/.kube
        state: directory
        owner: jenkins
        group: jenkins


